// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Animal = (function() {
    function Animal(sprite, position, velocity, acceleration, maxSpeed, maxAcc, maxTurnSpeed, orientation, attitude, size) {
      this.sprite = sprite;
      this.position = position != null ? position : new Vector(0.0, 0.0);
      this.velocity = velocity != null ? velocity : new Vector(0.0, 0.0);
      this.acceleration = acceleration != null ? acceleration : new Vector(0.0, 0.0);
      this.maxSpeed = maxSpeed != null ? maxSpeed : 20;
      this.maxAcc = maxAcc != null ? maxAcc : 200;
      this.maxTurnSpeed = maxTurnSpeed != null ? maxTurnSpeed : 1.0;
      this.orientation = orientation != null ? orientation : 0.0;
      this.attitude = attitude != null ? attitude : 0.0;
      this.size = size != null ? size : 1;
      this.getRadius = __bind(this.getRadius, this);
      this.setPosition = __bind(this.setPosition, this);
      this.setSize = __bind(this.setSize, this);
      this.sprite.position = this.position.mulCpy(Constants.UNIT);
      this.sprite.scale = new Vector(this.size * Constants.TEX_SCALE, this.size * Constants.TEX_SCALE);
      this.sprite.anchor = new Vector(0.5, 0.5);
      this.dead = false;
    }

    Animal.prototype.setSize = function(size) {
      this.size = size;
      return this.sprite.scale.set(this.size * Constants.TEX_SCALE);
    };

    Animal.prototype.setPosition = function(vec) {
      this.position.set(vec);
      this.sprite.position.set(vec);
      return this.sprite.position.mul(Constants.UNIT);
    };

    Animal.prototype.getRadius = function() {
      return this.size * Constants.TEX_UNIT;
    };

    return Animal;

  })();

}).call(this);
